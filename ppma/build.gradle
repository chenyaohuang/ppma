apply plugin: 'com.android.library'

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.1"
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    productFlavors {
    }
}

dependencies {
    compile 'com.google.android.gms:play-services-analytics:7.5.0'
    compile 'com.google.android.gms:play-services-gcm:7.5.0'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile files('libs/android-async-http-1.4.5.jar')
    compile files('libs/commons-io-2.4.jar')
}

task clearJar(type: Delete) {
    delete 'build/libs/' + project.PPMA_FILENAME
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename ('classes.jar', project.PPMA_FILENAME)
}

task rename(type: Copy ) {
    from('build/libs/')
    into('build/libs/')
    include('ppma.jar')
    rename ('ppma.jar', project.PPMA_FILENAME)
}

task androidReleaseJar(type: Jar, dependsOn: assembleRelease) {
    from "$buildDir/intermediates/classes/release/"
    exclude '**/BuildConfig.class'
    exclude '**/R.class'
    exclude '**/R$*.class'
}

task clearAar(type: Delete) {
    delete 'build/outputs/aar' + project.PPMA_FILENAME
}

task makeAar(type: Copy) {
    from('build/outputs/aar')
    into('build/outputs/aar')
    include('ppma-release.aar')
    rename ('ppma-release.aar', project.PPMA_FILENAME)

}

//makeJar.dependsOn(clearJar, build)
//androidReleaseJar.dependsOn(clearJar, build)
//rename.dependsOn(clearJar, androidReleaseJar, build)
makeAar {}.dependsOn(clearAar, build)
